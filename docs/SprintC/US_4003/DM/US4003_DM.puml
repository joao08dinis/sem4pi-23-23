@startuml
package "<<aggregate>> Profile" <<Folder>> #99b3ff {
   entity Profile <<root>> <<entity>>{}

    class TeacherProfile <<entity>> {}
    class StudentProfile <<entity>> {}
    class ManagerProfile <<entity>> <<NullObject>> {}
    class TaxPayerNumber <<(V,#B8255F) value object>> {}
    class DateOfBirth <<(V,#B8255F) value object>> {}
    class MechanographicNumber <<(V,#B8255F) value object>> {}
    class Acronym <<(V,#B8255F) value object>> {}
    class Schedule <<entity>> {}
    class "Day" as ProfileDay <<(V,#B8255F) value object>> {}

    TeacherProfile --|> Profile
    StudentProfile --|> Profile
    ManagerProfile --|> Profile
    TaxPayerNumber "1" <--* "1" Profile : has
    DateOfBirth "1" <--* "1" Profile : has
    MechanographicNumber "1" <--* "1" StudentProfile : has
    Acronym "1" <--* "1" TeacherProfile : has
    Schedule "1" <--* "1" Profile : has
    ProfileDay "1..*" <--* "1" Schedule : has

}


package "<<aggregate>> User" <<Folder>> #ffb380 {

   entity User <<root>> <<entity>>{
        String fullName
        String shortName
    }

    class Role <<(V,#B8255F) value object>> {}
    class Password <<(V,#B8255F) value object>> {}
    class Email <<Id>> <<unique>> <<(V,#B8255F) value object>>  {}
    entity Student <<entity>>{}
    entity Teacher <<entity>>{}
    entity Manager <<entity>>{}

    User "1" *--> "1" Email : has
    User "1" *--> "1" Password : has
    User "1" *--> "1" Role : has
    Manager "1" --> "*" User : creates
    Manager --|> User
    Student --|> User
    Teacher --|> User
}
Profile "1" *--> "1" User : has

package "<<aggregate>> Meeting" <<Folder>> #aabbaa {
   entity Meeting <<root>> <<entity>>{
    }

    class "Title" as MeetingTitle <<(V,#B8255F) value object>> <<unique>> {}
    class Duration <<(V,#B8255F) value object>> {}
    class Time <<(V,#B8255F) value object>> {}
    class MeetingState <<(V,#B8255F) value object>> {}
    class MeetingParticipant <<entity>> {}
    class MeetingParticipantState <<(V,#B8255F) value object>> {}

    Schedule "1" --> "1" Meeting : map of
    MeetingTitle "1" <--* "1" Meeting : has
    Duration "1" <--* "1" Meeting : has
    Time "1" <--* "1" Meeting : has
    Meeting "1" *--> "*" User : has
    Meeting "1" <-- "1" User : schedule and manages
    Meeting "1" --> "1" MeetingState : has
    Meeting "1" --> "1..*" MeetingParticipant : has
    MeetingParticipant "1" --> "1" MeetingParticipantState : has
}

@enduml